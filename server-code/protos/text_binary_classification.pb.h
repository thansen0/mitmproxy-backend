// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: text_binary_classification.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_text_5fbinary_5fclassification_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_text_5fbinary_5fclassification_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_text_5fbinary_5fclassification_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_text_5fbinary_5fclassification_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_text_5fbinary_5fclassification_2eproto;
class PromptMessage;
class PromptMessageDefaultTypeInternal;
extern PromptMessageDefaultTypeInternal _PromptMessage_default_instance_;
class PromptResponse;
class PromptResponseDefaultTypeInternal;
extern PromptResponseDefaultTypeInternal _PromptResponse_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::PromptMessage* Arena::CreateMaybeMessage<::PromptMessage>(Arena*);
template<> ::PromptResponse* Arena::CreateMaybeMessage<::PromptResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class PromptMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PromptMessage) */ {
 public:
  inline PromptMessage() : PromptMessage(nullptr) {};
  virtual ~PromptMessage();

  PromptMessage(const PromptMessage& from);
  PromptMessage(PromptMessage&& from) noexcept
    : PromptMessage() {
    *this = ::std::move(from);
  }

  inline PromptMessage& operator=(const PromptMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PromptMessage& operator=(PromptMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PromptMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PromptMessage* internal_default_instance() {
    return reinterpret_cast<const PromptMessage*>(
               &_PromptMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PromptMessage& a, PromptMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(PromptMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PromptMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PromptMessage* New() const final {
    return CreateMaybeMessage<PromptMessage>(nullptr);
  }

  PromptMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PromptMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PromptMessage& from);
  void MergeFrom(const PromptMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PromptMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PromptMessage";
  }
  protected:
  explicit PromptMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_text_5fbinary_5fclassification_2eproto);
    return ::descriptor_table_text_5fbinary_5fclassification_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPromptFieldNumber = 1,
  };
  // string prompt = 1;
  void clear_prompt();
  const std::string& prompt() const;
  void set_prompt(const std::string& value);
  void set_prompt(std::string&& value);
  void set_prompt(const char* value);
  void set_prompt(const char* value, size_t size);
  std::string* mutable_prompt();
  std::string* release_prompt();
  void set_allocated_prompt(std::string* prompt);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_prompt();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_prompt(
      std::string* prompt);
  private:
  const std::string& _internal_prompt() const;
  void _internal_set_prompt(const std::string& value);
  std::string* _internal_mutable_prompt();
  public:

  // @@protoc_insertion_point(class_scope:PromptMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr prompt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_text_5fbinary_5fclassification_2eproto;
};
// -------------------------------------------------------------------

class PromptResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PromptResponse) */ {
 public:
  inline PromptResponse() : PromptResponse(nullptr) {};
  virtual ~PromptResponse();

  PromptResponse(const PromptResponse& from);
  PromptResponse(PromptResponse&& from) noexcept
    : PromptResponse() {
    *this = ::std::move(from);
  }

  inline PromptResponse& operator=(const PromptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PromptResponse& operator=(PromptResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PromptResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PromptResponse* internal_default_instance() {
    return reinterpret_cast<const PromptResponse*>(
               &_PromptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PromptResponse& a, PromptResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PromptResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PromptResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PromptResponse* New() const final {
    return CreateMaybeMessage<PromptResponse>(nullptr);
  }

  PromptResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PromptResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PromptResponse& from);
  void MergeFrom(const PromptResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PromptResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PromptResponse";
  }
  protected:
  explicit PromptResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_text_5fbinary_5fclassification_2eproto);
    return ::descriptor_table_text_5fbinary_5fclassification_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDoesViolateFieldNumber = 1,
  };
  // bool doesViolate = 1;
  void clear_doesviolate();
  bool doesviolate() const;
  void set_doesviolate(bool value);
  private:
  bool _internal_doesviolate() const;
  void _internal_set_doesviolate(bool value);
  public:

  // @@protoc_insertion_point(class_scope:PromptResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool doesviolate_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_text_5fbinary_5fclassification_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PromptMessage

// string prompt = 1;
inline void PromptMessage::clear_prompt() {
  prompt_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& PromptMessage::prompt() const {
  // @@protoc_insertion_point(field_get:PromptMessage.prompt)
  return _internal_prompt();
}
inline void PromptMessage::set_prompt(const std::string& value) {
  _internal_set_prompt(value);
  // @@protoc_insertion_point(field_set:PromptMessage.prompt)
}
inline std::string* PromptMessage::mutable_prompt() {
  // @@protoc_insertion_point(field_mutable:PromptMessage.prompt)
  return _internal_mutable_prompt();
}
inline const std::string& PromptMessage::_internal_prompt() const {
  return prompt_.Get();
}
inline void PromptMessage::_internal_set_prompt(const std::string& value) {
  
  prompt_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void PromptMessage::set_prompt(std::string&& value) {
  
  prompt_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:PromptMessage.prompt)
}
inline void PromptMessage::set_prompt(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  prompt_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:PromptMessage.prompt)
}
inline void PromptMessage::set_prompt(const char* value,
    size_t size) {
  
  prompt_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:PromptMessage.prompt)
}
inline std::string* PromptMessage::_internal_mutable_prompt() {
  
  return prompt_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* PromptMessage::release_prompt() {
  // @@protoc_insertion_point(field_release:PromptMessage.prompt)
  return prompt_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PromptMessage::set_allocated_prompt(std::string* prompt) {
  if (prompt != nullptr) {
    
  } else {
    
  }
  prompt_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), prompt,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:PromptMessage.prompt)
}
inline std::string* PromptMessage::unsafe_arena_release_prompt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PromptMessage.prompt)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return prompt_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void PromptMessage::unsafe_arena_set_allocated_prompt(
    std::string* prompt) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (prompt != nullptr) {
    
  } else {
    
  }
  prompt_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      prompt, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PromptMessage.prompt)
}

// -------------------------------------------------------------------

// PromptResponse

// bool doesViolate = 1;
inline void PromptResponse::clear_doesviolate() {
  doesviolate_ = false;
}
inline bool PromptResponse::_internal_doesviolate() const {
  return doesviolate_;
}
inline bool PromptResponse::doesviolate() const {
  // @@protoc_insertion_point(field_get:PromptResponse.doesViolate)
  return _internal_doesviolate();
}
inline void PromptResponse::_internal_set_doesviolate(bool value) {
  
  doesviolate_ = value;
}
inline void PromptResponse::set_doesviolate(bool value) {
  _internal_set_doesviolate(value);
  // @@protoc_insertion_point(field_set:PromptResponse.doesViolate)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_text_5fbinary_5fclassification_2eproto
